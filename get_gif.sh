#!/bin/bash

# Dossier de sortie
OUTPUT_DIR="img"
mkdir -p "$OUTPUT_DIR"

# Dur√©e du GIF (en secondes)
DURATION=5

# Liste des vid√©os YouTube √† traiter (ajoute tes liens ici)
VIDEOS=(
    # "https://www.youtube.com/watch?v=dXxtG0hrdls"
    "https://www.youtube.com/watch?v=RlHAMa2Zh_M"
    # "https://www.youtube.com/watch?v=7fmVZ7J58q8"
    # "https://www.youtube.com/watch?v=YRRhLvk12NU"
)

# V√©rifie si yt-dlp et ffmpeg sont install√©s
if ! command -v yt-dlp &> /dev/null; then
    echo "Erreur : yt-dlp n'est pas install√©. Installe-le avec : sudo apt install yt-dlp"
    exit 1
fi

if ! command -v ffmpeg &> /dev/null; then
    echo "Erreur : ffmpeg n'est pas install√©. Installe-le avec : sudo apt install ffmpeg"
    exit 1
fi

# Fonction pour t√©l√©charger une vid√©o et g√©n√©rer un GIF
generate_gif() {
    local url="$1"
    local id=$(echo "$url" | grep -o "v=[^&]*" | cut -d'=' -f2) # R√©cup√®re l'ID de la vid√©o
    local video_file="$OUTPUT_DIR/$id.mp4"
    local gif_file="$OUTPUT_DIR/$id.gif"

    echo "üì• T√©l√©chargement de la vid√©o : $url"
    yt-dlp -f "best[height<=360]" -o "$video_file" "$url"

    if [[ ! -f "$video_file" ]]; then
        echo "‚ùå √âchec du t√©l√©chargement pour $url"
        return
    fi

    echo "üé• Extraction des $DURATION premi√®res secondes..."
    ffmpeg -y -t $DURATION -i "$video_file" -vf "fps=10,scale=320:-1:flags=lanczos" -c:v pam -f image2pipe - | \
        convert - -layers Optimize -delay 10 -loop 0 "$gif_file"

    echo "‚úÖ GIF g√©n√©r√© : $gif_file"

    # Supprime la vid√©o temporaire pour √©conomiser de l'espace
    rm -f "$video_file"
}

# Boucle sur toutes les vid√©os
for video in "${VIDEOS[@]}"; do
    generate_gif "$video"
done

echo "üéâ Tous les GIFs sont pr√™ts dans le dossier '$OUTPUT_DIR'."
